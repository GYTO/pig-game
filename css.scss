/*
 *  Button mixin
 *  @param (Button Name) $buttonName
 *  @param (Button Parameter) $buttonParam
 *  @param (Button Position) $buttonPosition
 *  @param (Animation Name) $animationName
 *  @param (Animation Time) $animationTime - default 1s
 *  @param (Animation Property) $animationProperty - default infinite
 */
@mixin buttonEffect($buttonName, $buttonParam, $buttonPosition, $animationName, $animationTime: 1s, $animationProperty: infinite) {
  &.#{$buttonName} {
    position         : absolute;
    left             : 50%;
    transform        : translateX(-50%);
    z-index          : 2;
    color            : black;
    background-color : transparent;
    border           : 0;
    padding          : 6px 10px;
    font-size        : 1.4em;
    cursor           : pointer;
    text-transform   : uppercase;
    i { color : indianred; }
    @if($buttonParam == 'top') { top : $buttonPosition; }
    @else if($buttonParam == 'bottom') { bottom : $buttonPosition; }
    &:hover i {
      animation : $animationName $animationTime $animationProperty;
    }
    &:focus { outline: none; }
  }
}
/*
 *  Button mixin
 *  @param (Color Type) $colorType
 *  @param (Color) $color
 */
@mixin activeState($colorType, $color) {
  #{$colorType}: rgba($color, 0.5);
  .active & {
    #{$colorType}: $color
  }
}

* {
  font-weight    : lighter;
  text-align     : center;
  text-transform : uppercase;
}

.wrapper {
  height          : 100vh;
  background      : linear-gradient(-60deg, #48c6ef, #6f86d6);
  display         : flex;
  justify-content : center;
  align-items     : center;
}

.card {
  box-shadow : 0 2px 30px -8px black;
}

button {
  @include buttonEffect(btn-roll, bottom, 80px, spin, 1s);
  @include buttonEffect(btn-hold, bottom, 30px, drop, 1s);
  @include buttonEffect(btn-new, top, 30px, jump, 2s);
}

.player-0-panel,
.player-1-panel {
  margin : 80px 0;
  user-select: none;
  &.active {
    &:before {
      content          : '';
      position         : absolute;
      left             : 0;
      top              : 0;
      width            : 100%;
      height           : 100%;
      display          : block;
      background-color : rgba(gray, 0.1);
    }
  }
}

.player-name {
  font-size      : 3em;
  position       : relative;
  @include activeState(color, black);
}

.player-score {
  font-size   : 5em;
  line-height : 1;
  @include activeState(color, indianred);
}

.player-current-box {
  padding          : 10px 0;
  width            : 120px;
  margin           : 80px auto 0;
  @include activeState(background-color, indianred);
}

.player-current-label {
  font-size      : 0.9em;
  @include activeState(color, black);
}

.player-current-score {
  font-size   : 1.8em;
  @include activeState(color, white);
}

@keyframes spin {
  from {transform : rotate(0deg);}
  to {transform : rotate(360deg);}
}

@keyframes jump {
  0% {transform : scale(1);}
  50% {transform : scale(1.1);}
  100% {transform : scale(1);}
}

@keyframes drop {
  0% {transform : translateY(0);}
  50% {transform : translateY(-6px);}
  100% {transform : translateY(0);}
}
