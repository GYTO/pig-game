/*
 *  Button mixin
 *  @param (Button Name) $buttonName
 *  @param (Animation Name) $animationName
 *  @param (Animation Time) $animationTime - default 1s
 *  @param (Animation Property) $animationProperty - default infinite
 */
@mixin buttonEffect(
    $buttonName,
    $animationName,
    $animationTime: 1s,
    $animationProperty: infinite) {
  &.#{$buttonName} {
    position  : absolute;
    left      : 50%;
    transform : translateX(-50%);
    z-index   : 2;
  }
  &.#{$buttonName}:hover i {
    animation : $animationName,
                $animationTime,
                $animationProperty;
  }
}
.wrapper {
  height          : 100vh;
  background      : linear-gradient(-60deg, #48c6ef, #6f86d6);
  display         : flex;
  justify-content : center;
  align-items     : center;
}
.card {
  box-shadow : 0 2px 30px -8px black;
}
button {
  color            : black;
  background-color : transparent;
  border           : 0;
  padding          : 6px 10px;
  font-size        : 1.4em;
  cursor           : pointer;
  text-transform   : uppercase;
  font-weight      : lighter;
  i {
    color : indianred;
  }
  &.btn-roll:hover i {
    animation : spin 1s infinite;
  }
  &.btn-new:hover i {
    animation : jump 2s infinite;
  }
  &.btn-hold:hover i {
    animation : drop 1s infinite;
  }
  &.btn-new {
    position  : absolute;
    left      : 50%;
    transform : translateX(-50%);
    top       : 30px;
    z-index   : 2;
  }
  &.btn-hold {
    position  : absolute;
    left      : 50%;
    transform : translateX(-50%);
    bottom    : 30px;
    z-index   : 2;
  }
  &.btn-roll {
    position  : absolute;
    left      : 50%;
    transform : translateX(-50%);
    bottom    : 80px;
    z-index   : 2;
  }
}
.player-0-panel,
.player-1-panel {
  margin : 80px 0;
  &.active {
    &:before {
      content          : '';
      position         : absolute;
      left             : 0;
      top              : 0;
      width            : 100%;
      height           : 100%;
      display          : block;
      background-color : rgba(gray, 0.1);
    }
  }
}
.player-name {
  text-transform : uppercase;
  text-align     : center;
  font-size      : 3em;
  font-weight    : lighter;
  color          : rgba(black, 0.5);
  position       : relative;
  .active & {
    color : black;
  }
}
.player-score {
  font-size   : 5em;
  line-height : 1;
  text-align  : center;
  color       : rgba(indianred, 0.5);
  font-weight : lighter;
  .active & {
    color : indianred;
  }
}
.player-current-box {
  background-color : rgba(indianred, 0.5);
  padding          : 10px 0;
  text-align       : center;
  width            : 120px;
  margin           : 80px auto 0;
  .active & {
    background-color : indianred;
  }
}
.player-current-label {
  text-transform : uppercase;
  font-weight    : lighter;
  font-size      : 0.9em;
  color          : rgba(black, 0.5);
  .active & {
    color : black;
  }
}
.player-current-score {
  font-size   : 1.8em;
  color       : white;
  font-weight : lighter;
  color       : rgba(white, 0.5);
  .active & {
    color : white;
  }
}
@keyframes spin {
  from {
    transform : rotate(0deg);
  }
  to {
    transform : rotate(360deg);
  }
}
@keyframes jump {
  0% {
    transform : scale(1);
  }
  50% {
    transform : scale(1.1);
  }
  100% {
    transform : scale(1);
  }
}
@keyframes drop {
  0% {
    transform : translateY(0);
  }
  50% {
    transform : translateY(-6px);
  }
  100% {
    transform : translateY(0);
  }
}
